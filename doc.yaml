openapi: 3.0.1
info:
  title: Room API
  description: Room API
  contact: {}
  version: "1.0"
servers:
  - url: /
paths:
  /room-api/workspaces:
    get:
      tags:
        - Workspace
      summary: 내 workspace 조회
      description: 내 workspace 조회
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateWorkspaceResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
    post:
      tags:
        - Workspace
      summary: workspace 생성
      description: workspace 생성
      requestBody:
        description: query params
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.CreateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateWorkspaceResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
  /room-api/workspaces/invite:
    get:
      tags:
        - Workspace
      summary: Workspace 초대 목록 조회
      description: Workspace 초대 목록 조회
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateWorkspaceResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
    post:
      tags:
        - Workspace
      summary: workspace 초대
      description: workspace 초대
      requestBody:
        description: query params
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.CreateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateWorkspaceResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
  /room-api/workspaces/invite/accept:
    put:
      tags:
        - Workspace
      summary: Workspace 초대 승락
      description: Workspace 초대 승락
      responses:
        "200":
          description: OK
          content: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
  /room-api/workspaces/{WorkspaceID}:
    put:
      tags:
        - Workspace
      summary: workspace 수정
      description: workspace 수정
      parameters:
        - name: workspaceID
          in: path
          description: Workspace ID
          required: true
          schema:
            type: string
      requestBody:
        description: Update Workspace data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.UpdateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.UpdateWorkspaceResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
  /room-api/workspaces/{WorkspaceID}/rooms:
    get:
      tags:
        - Room
      summary: 내 방 목록 조회
      description: 내 방 목록 조회
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/model.RoomDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
    post:
      tags:
        - Room
      summary: 방 생성
      description: 방 생성
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      requestBody:
        description: query params
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.CreateRoomRestRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateRoomRestResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
  /room-api/workspaces/{WorkspaceID}/rooms/:RoomID/leave:
    put:
      tags:
        - Room
      summary: 방 초대
      description: 방 초대
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: RoomID
          in: path
          description: RoomID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/model.RoomMemberDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
  /room-api/workspaces/{WorkspaceID}/rooms/:RoomID/members:
    get:
      tags:
        - Room
      summary: 내 방 멤버 조회
      description: 내 방 멤버 조회
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/model.RoomMemberDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
  /room-api/workspaces/{WorkspaceID}/rooms/{RoomID}:
    put:
      tags:
        - Room
      summary: 방 수정
      description: 방 수정
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
      requestBody:
        description: query params
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.EditRoomRestRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateRoomRestResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
  /room-api/workspaces/{WorkspaceID}/rooms/{RoomID}/messages:
    get:
      tags:
        - Message
      summary: 방 메시지 목록 조회
      description: 방 메시지 목록 조회
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: RoomID
          in: path
          description: RoomID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.GetMessagesResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
    post:
      tags:
        - Message
      summary: 방 메시지 전송
      description: 방 메시지 전송
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: RoomID
          in: path
          description: RoomID
          required: true
          schema:
            type: string
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.CreateMessageRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateRoomRestResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
  /room-api/workspaces/{WorkspaceID}/rooms/{RoomID}/messages/{MessageID}/reactions:
    post:
      tags:
        - Message
      summary: 리액션(emoji) 추가
      description: 리액션(emoji) 추가
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: RoomID
          in: path
          description: RoomID
          required: true
          schema:
            type: string
        - name: MessageID
          in: path
          description: MessageID
          required: true
          schema:
            type: string
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.CreateReactionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateRoomEventResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
    delete:
      tags:
        - Message
      summary: 리액션(emoji) 삭제
      description: 리액션(emoji) 삭제
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: RoomID
          in: path
          description: RoomID
          required: true
          schema:
            type: string
        - name: MessageID
          in: path
          description: MessageID
          required: true
          schema:
            type: string
      requestBody:
        description: Body
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/model.CreateReactionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateRoomEventResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
      x-codegen-request-body-name: request
  /room-api/workspaces/{WorkspaceID}/rooms/{RoomID}/messages/{MessageID}/threads:
    get:
      tags:
        - Message
      summary: Thread 메시지 목록 조회
      description: Thread 메시지 목록 조회
      parameters:
        - name: WorkspaceID
          in: path
          description: WorkspaceID
          required: true
          schema:
            type: string
        - name: RoomID
          in: path
          description: RoomID
          required: true
          schema:
            type: string
        - name: MessageID
          in: path
          description: MessageID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.GetMessagesResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorOutput"
      security:
        - AccessToken: []
  /workspaces/:WorkspaceID/members:
    get:
      tags:
        - Workspace
      summary: Workspace Member 조회
      description: |-
        Workspace Member 조회
        Workspace Member 조회
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.WorkspaceMemberDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorResponse"
  /workspaces/:WorkspaceID/members/:MemberID:
    delete:
      tags:
        - Workspace
      summary: Workspace 나가기
      description: Workspace 나가기
      responses:
        "200":
          description: OK
          content: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorResponse"
  /workspaces/:WorkspaceID/members/:MemberID/profile:
    post:
      tags:
        - Workspace
      summary: 프로필 생성
      description: 프로필 생성
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.CreateWorkspaceMemberProfileResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorResponse"
  /workspaces/:WorkspaceID/rooms:
    get:
      tags:
        - Workspace
      summary: Find My rooms
      description: |-
        Find My rooms
        Find My rooms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.RoomMemberDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ex.ErrorResponse"
components:
  schemas:
    ex.ErrorCode:
      type: string
      enum:
        - M_INVALID_PARAM
        - M_INVALID_ARGUMENT
        - M_UNRECOGNIZED
        - M_NOT_JSON
        - "4005"
        - M_NOT_FOUND
        - M_MISSING_PARAM
        - M_BAD_STATE
        - M_UNSUPPORTED_OPERATION
        - M_UNAUTHORIZED
        - M_UNREGISTERED
        - M_FORBIDDEN
        - M_INVALID_USERNAME
        - "5001"
        - "5800"
        - "5900"
        - "5999"
        - "9000"
        - M_UNKNOWN
      x-enum-varnames:
        - Err_InvalidParameter
        - Err_InvalidArgument
        - Err_InvalidRequest
        - Err_RequestBodyNotJSON
        - Err_InvalidFormat
        - Err_NotFoundResource
        - Err_MissingParameter
        - Err_BadState
        - Err_UnsupportedOperation
        - Err_Unauthorized
        - Err_Unregistered
        - Err_Forbidden
        - Err_InvalidUserID
        - Err_ConvertModelFail
        - Err_InternalApiFail
        - Err_DBError
        - Err_InternalServerError
        - Err_NotFoundErrorCode
        - Err_UnknownError
    ex.ErrorOutput:
      type: object
      properties:
        data:
          type: object
        errorCode:
          $ref: "#/components/schemas/ex.ErrorCode"
        errorMessage:
          type: string
    ex.ErrorResponse:
      type: object
    model.CreateMessageRequest:
      type: object
      properties:
        content:
          type: string
        event_type:
          $ref: "#/components/schemas/spec.EventType"
        message_id:
          type: object
          description: THREAD 타입 일 때 사용
          allOf:
            - $ref: "#/components/schemas/spec.MessageID"
    model.CreateReactionRequest:
      type: object
      properties:
        emoji:
          type: string
        is_thread:
          type: boolean
        workspace_id:
          type: string
    model.CreateRoomEventResponse:
      type: object
      properties:
        message_id:
          $ref: "#/components/schemas/spec.MessageID"
        message_thread_id:
          $ref: "#/components/schemas/spec.MessageThreadID"
        ts:
          type: string
    model.CreateRoomRestRequest:
      type: object
      properties:
        creator:
          type: string
        dm_target:
          type: string
        invite_members:
          type: array
          items:
            type: string
        is_private:
          type: boolean
        name:
          type: string
        room_type:
          $ref: "#/components/schemas/spec.RoomType"
        workspace_id:
          type: string
    model.CreateRoomRestResponse:
      type: object
      properties:
        room_id:
          type: string
    model.CreateUserProfileRequest:
      type: object
      properties:
        nickname:
          type: string
        profile_image:
          type: string
    model.CreateWorkspaceMemberProfileResponse:
      type: object
      properties:
        memberProfileID:
          type: integer
    model.CreateWorkspaceRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        profile:
          $ref: "#/components/schemas/model.CreateUserProfileRequest"
    model.CreateWorkspaceResponse:
      type: object
      properties:
        creator:
          type: string
        description:
          type: string
        member_id:
          type: string
        member_role:
          $ref: "#/components/schemas/spec.MemberRole"
        name:
          type: string
        status:
          $ref: "#/components/schemas/spec.Status"
        url:
          type: string
        workspace_id:
          type: string
    model.EditRoomRestRequest:
      type: object
      properties:
        editor:
          type: string
        is_private:
          type: boolean
        name:
          type: string
    model.GetMessage:
      type: object
      properties:
        content:
          type: string
        created_at:
          type: string
        data:
          $ref: "#/components/schemas/spec.MessageData"
        message_id:
          $ref: "#/components/schemas/spec.MessageID"
        message_thread_id:
          $ref: "#/components/schemas/spec.MessageThreadID"
        sender_id:
          type: string
        ts:
          type: string
        updated_at:
          type: string
        updated_by:
          type: string
    model.GetMessagesResponse:
      type: object
      properties:
        end:
          $ref: "#/components/schemas/spec.MessageID"
        has_more:
          type: boolean
        limit:
          type: integer
        messages:
          type: array
          items:
            $ref: "#/components/schemas/model.GetMessage"
        room_id:
          type: string
        start:
          $ref: "#/components/schemas/spec.MessageID"
    model.RoomDto:
      type: object
      properties:
        created_at:
          type: integer
        created_by:
          type: string
        data:
          $ref: "#/components/schemas/spec.RoomData"
        is_private:
          type: boolean
        name:
          type: string
        room_id:
          type: string
        room_type:
          $ref: "#/components/schemas/spec.RoomType"
        status:
          $ref: "#/components/schemas/spec.Status"
        workspace_id:
          type: string
    model.RoomMemberDto:
      type: object
      properties:
        isBanned:
          type: boolean
        memberID:
          type: string
        role:
          $ref: "#/components/schemas/spec.MemberRole"
        roomID:
          type: string
        roomMemberID:
          type: integer
        status:
          $ref: "#/components/schemas/spec.Status"
    model.UpdateWorkspaceRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        status:
          $ref: "#/components/schemas/spec.Status"
        url:
          type: string
    model.UpdateWorkspaceResponse:
      type: object
    model.WorkspaceMemberDto:
      type: object
      properties:
        workspaceID:
          type: string
        workspaceMemberID:
          type: string
        workspaceMemberRole:
          $ref: "#/components/schemas/spec.MemberRole"
    spec.Emoji:
      type: object
      properties:
        emoji:
          type: string
        sender_id:
          type: string
    spec.EventType:
      type: string
      enum:
        - ""
        - MESSAGE
        - INVITE
        - THREAD
        - REACTION
        - CREATE_ROOM
        - JOIN_ROOM
        - LEAVE_ROOM
        - TYPING
        - PRESENCE
        - ETC
      x-enum-varnames:
        - EventTypeNone
        - EventTypeMessage
        - EventTypeInvite
        - EventTypeThread
        - EventTypeReaction
        - EventTypeCreateRoom
        - EventTypeJoinRoom
        - EventTypeLeaveRoom
        - EventTypeTyping
        - EventTypePresence
        - EventTypeETC
    spec.MemberRole:
      type: string
      enum:
        - CREATOR
        - ADMIN
        - NORMAL
      x-enum-varnames:
        - MemberCreator
        - MemberAdmin
        - MemberNormal
    spec.MessageData:
      type: object
      properties:
        emoji_count:
          type: integer
        emojis:
          type: array
          items:
            $ref: "#/components/schemas/spec.Emoji"
        text:
          type: string
        thread_count:
          type: integer
        type:
          type: string
    spec.MessageID:
      type: integer
      enum:
        - -1
      x-enum-varnames:
        - InvalidID
    spec.MessageThreadID:
      type: integer
      enum:
        - -1
      x-enum-varnames:
        - InvalidID
    spec.RoomData:
      type: object
      properties:
        members:
          type: array
          items:
            type: string
    spec.RoomType:
      type: string
      enum:
        - ""
        - DM
        - GROUP
        - CHANNEL
      x-enum-varnames:
        - RoomTypeNone
        - RoomTypeDM
        - RoomTypeGroup
        - RoomTypeChannel
    spec.Status:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - DELETED
      x-enum-varnames:
        - StatusActive
        - StatusInactive
        - StatusDeleted
  securitySchemes:
    AccessToken:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://10.202.20.237:9000/realms/waa-chat/protocol/openid-connect/auth
          tokenUrl: http://10.202.20.237:9000/realms/waa-chat/protocol/openid-connect/token
          scopes:
            openid: openid
            profile: profile
x-original-swagger-version: "2.0"
